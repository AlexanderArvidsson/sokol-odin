name: Odin

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - if: runner.os == 'Linux'
        name: prepare-linux
        run: |
          sudo apt-get update
          sudo apt-get install libglu1-mesa-dev mesa-common-dev xorg-dev libasound-dev
          mkdir build
          cd build
          curl -L https://github.com/odin-lang/Odin/releases/download/dev-2022-08/odin-ubuntu-amd64-dev-2022-08.zip --output odin.zip
          unzip odin.zip -D /usr/local/bin/
          chmod a+x /usr/local/bin/odin
      - if: runner.os == 'macOS'
        name: prepare-macos
        run: |
          brew install odin
          ./build_clibs_macos.sh
      - if: runner.os == 'Windows'
        name: prepare-windows
        run: |
          echo "FIXME: Install Odin"
      - name: build
        run: |
          mkdir build
          cd build
          odin build ../examples/clear -debug
          odin build ../examples/triangle -debug
          odin build ../examples/quad -debug
          odin build ../examples/bufferoffsets -debug
          odin build ../examples/cube -debug
          odin build ../examples/noninterleaved -debug
          odin build ../examples/texcube -debug
          odin build ../examples/shapes -debug
          odin build ../examples/offscreen -debug
          odin build ../examples/instancing -debug
          odin build ../examples/mrt -debug
          odin build ../examples/blend -debug
          odin build ../examples/debugtext -debug
          odin build ../examples/debugtext-print -debug
          odin build ../examples/debugtext-userfont -debug
          odin build ../examples/saudio -debug
          odin build ../examples/sgl -debug
          odin build ../examples/sgl-points -debug
          odin build ../examples/sgl-context -debug
